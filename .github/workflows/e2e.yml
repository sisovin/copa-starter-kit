name: Playwright Tests

on:
  push:
    branches: [main]
    paths:
      - "**/*.js"
      - "**/*.jsx"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.spec.ts"
      - "package.json"
      - "playwright.config.*"
      - ".github/workflows/e2e.yml"
  pull_request:
    branches: [main]
    paths:
      - "**/*.js"
      - "**/*.jsx"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.spec.ts"
      - "package.json"
      - "playwright.config.*"
      - ".github/workflows/e2e.yml"

jobs:
  e2e-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Set up .env file
        run: |
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || 'dummy_key' }}" > .env.local
          echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY || 'dummy_key' }}" >> .env.local
          echo "CONVEX_DEPLOYMENT=${{ secrets.CONVEX_DEPLOYMENT || 'dummy_deployment' }}" >> .env.local
          echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.NEXT_PUBLIC_CONVEX_URL || 'https://dummy-url.convex.cloud' }}" >> .env.local

      - name: Build the project
        run: npm run build

      - name: Start Background Server
        run: npm run start & npx wait-on http://localhost:3000

      - name: Run Playwright tests
        run: npx playwright test
        id: playwright

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Report Test Results
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const outcome = '${{ steps.playwright.outcome }}';
            const body = outcome === 'success' 
              ? '✅ Playwright E2E tests passed!'
              : '❌ Playwright E2E tests failed. Please check the artifacts for details.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
        continue-on-error: true
